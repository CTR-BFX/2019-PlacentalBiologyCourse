
--------------------------------------------------------------------------------
Module:			fastqc
Run File:		SRR1823644_1.fastq.gz_fastq_kallisto.run
Job ID:			cf_fastq_kallisto_1466004344_fastqc_165
Previous Job ID:	start_000
Date & Time:		16:30, 15-06-2016
--------------------------------------------------------------------------------

---------- FastQC version information ----------
FastQC v0.11.5

------- End of FastQC version information ------

###CFCMD fastqc -q  SRR1823644_1.fastq.gz

###CF FastQC successfully ran, took 3 minutes, 8 seconds

###CFCMD fastqc -q  SRR1823644_2.fastq.gz

###CF FastQC successfully ran, took 3 minutes, 9 seconds




--------------------------------------------------------------------------------
Module:			trim_galore
Run File:		SRR1823644_1.fastq.gz_fastq_kallisto.run
Job ID:			cf_fastq_kallisto_1466004344_trim_galore_522
Previous Job ID:	start_000
Date & Time:		16:31, 15-06-2016
--------------------------------------------------------------------------------

---------- Cutadapt version information ----------
1.8.1

------- End of Cutadapt version information ------
---------- Trim Galore! version information ----------

                          Quality-/Adapter-/RRBS-Trimming
                               (powered by Cutadapt)
                                  version 0.4.1

                             Last update: 20 07 2015


------- End of Trim Galore! version information ------

###CFCMD trim_galore --paired --gzip --phred33       --fastqc SRR1823644_1.fastq.gz SRR1823644_2.fastq.gz

Path to Cutadapt set as: 'cutadapt' (default)
1.8.1
Cutadapt seems to be working fine (tested command 'cutadapt --version')


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> SRR1823644_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	289	AGATCGGAAGAGC	1000000	0.03
Nextera	2	CTGTCTCTTATA	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Illumina adapter for trimming (count: 289). Second best hit was Nextera (count: 2)

Writing report to 'SRR1823644_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR1823644_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.4.1
Cutadapt version: 1.8.1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Writing final adapter and quality trimmed output to SRR1823644_1_trimmed.fq.gz


  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR1823644_1.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.8.1 with Python 2.7.5
Command line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR1823644_1.fastq.gz
Trimming 1 adapter with at most 10.0% errors in single-end mode ...
Finished in 492.22 s (17 us/read; 3.47 M reads/minute).

=== Summary ===

Total reads processed:              28,490,636
Reads with adapters:                 9,350,405 (32.8%)
Reads written (passing filters):    28,490,636 (100.0%)

Total basepairs processed: 1,453,022,436 bp
Quality-trimmed:             257,447,103 bp (17.7%)
Total written (filtered):  1,182,173,549 bp (81.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 9350405 times.

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 30.4%
  C: 32.3%
  G: 19.9%
  T: 16.6%
  none/other: 0.8%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6389165	7122659.0	0	6389165
2	2222449	1780664.8	0	2222449
3	588216	445166.2	0	588216
4	111679	111291.5	0	111679
5	21217	27822.9	0	21217
6	3029	6955.7	0	3029
7	1345	1738.9	0	1345
8	772	434.7	0	772
9	1947	108.7	0	459 1488
10	1666	27.2	1	688 978
11	1149	6.8	1	481 668
12	781	1.7	1	608 173
13	348	0.4	1	290 58
14	687	0.4	1	580 107
15	935	0.4	1	810 125
16	323	0.4	1	268 55
17	377	0.4	1	317 60
18	243	0.4	1	201 42
19	279	0.4	1	216 63
20	308	0.4	1	260 48
21	200	0.4	1	158 42
22	211	0.4	1	157 54
23	234	0.4	1	187 47
24	323	0.4	1	252 71
25	180	0.4	1	124 56
26	188	0.4	1	137 51
27	132	0.4	1	77 55
28	213	0.4	1	150 63
29	156	0.4	1	99 57
30	144	0.4	1	59 85
31	214	0.4	1	153 61
32	257	0.4	1	141 116
33	184	0.4	1	89 95
34	131	0.4	1	82 49
35	103	0.4	1	50 53
36	88	0.4	1	38 50
37	101	0.4	1	64 37
38	60	0.4	1	28 32
39	21	0.4	1	7 14
40	26	0.4	1	0 26
41	22	0.4	1	8 14
42	58	0.4	1	12 46
43	25	0.4	1	6 19
44	17	0.4	1	2 15
45	13	0.4	1	0 13
46	33	0.4	1	2 31
47	18	0.4	1	4 14
48	39	0.4	1	0 39
49	26	0.4	1	0 26
50	14	0.4	1	0 14
51	59	0.4	1	0 59


RUN STATISTICS FOR INPUT FILE: SRR1823644_1.fastq.gz
=============================================
28490636 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'SRR1823644_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR1823644_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.4.1
Cutadapt version: 1.8.1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Writing final adapter and quality trimmed output to SRR1823644_2_trimmed.fq.gz


  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR1823644_2.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 1.8.1 with Python 2.7.5
Command line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR1823644_2.fastq.gz
Trimming 1 adapter with at most 10.0% errors in single-end mode ...
Finished in 492.99 s (17 us/read; 3.47 M reads/minute).

=== Summary ===

Total reads processed:              28,490,636
Reads with adapters:                 9,360,677 (32.9%)
Reads written (passing filters):    28,490,636 (100.0%)

Total basepairs processed: 1,453,022,436 bp
Quality-trimmed:             251,630,331 bp (17.3%)
Total written (filtered):  1,187,838,080 bp (81.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 9360677 times.

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 30.3%
  C: 32.1%
  G: 20.2%
  T: 17.1%
  none/other: 0.4%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6256105	7122659.0	0	6256105
2	2369371	1780664.8	0	2369371
3	588804	445166.2	0	588804
4	106153	111291.5	0	106153
5	19930	27822.9	0	19930
6	3362	6955.7	0	3362
7	1570	1738.9	0	1570
8	936	434.7	0	936
9	2981	108.7	0	636 2345
10	2014	27.2	1	931 1083
11	1291	6.8	1	589 702
12	1173	1.7	1	937 236
13	383	0.4	1	324 59
14	1083	0.4	1	955 128
15	428	0.4	1	365 63
16	287	0.4	1	236 51
17	687	0.4	1	606 81
18	287	0.4	1	238 49
19	590	0.4	1	533 57
20	211	0.4	1	172 39
21	94	0.4	1	64 30
22	267	0.4	1	221 46
23	313	0.4	1	266 47
24	410	0.4	1	358 52
25	106	0.4	1	79 27
26	126	0.4	1	89 37
27	87	0.4	1	61 26
28	164	0.4	1	133 31
29	107	0.4	1	69 38
30	191	0.4	1	148 43
31	56	0.4	1	25 31
32	179	0.4	1	137 42
33	64	0.4	1	33 31
34	65	0.4	1	36 29
35	104	0.4	1	79 25
36	88	0.4	1	58 30
37	67	0.4	1	48 19
38	48	0.4	1	15 33
39	49	0.4	1	33 16
40	22	0.4	1	8 14
41	59	0.4	1	43 16
42	125	0.4	1	83 42
43	14	0.4	1	8 6
44	34	0.4	1	16 18
45	29	0.4	1	22 7
46	27	0.4	1	8 19
47	25	0.4	1	2 23
48	58	0.4	1	19 39
49	31	0.4	1	6 25
50	9	0.4	1	0 9
51	13	0.4	1	3 10


RUN STATISTICS FOR INPUT FILE: SRR1823644_2.fastq.gz
=============================================
28490636 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR1823644_1_trimmed.fq.gz and SRR1823644_2_trimmed.fq.gz
file_1: SRR1823644_1_trimmed.fq.gz, file_2: SRR1823644_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SRR1823644_1_trimmed.fq.gz and SRR1823644_2_trimmed.fq.gz <<<<<
Writing validated paired-end read 1 reads to SRR1823644_1_val_1.fq.gz
Writing validated paired-end read 2 reads to SRR1823644_2_val_2.fq.gz

Total number of sequences analysed: 28490636

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 6140053 (21.55%)


  >>> Now running FastQC on the validated data SRR1823644_1_val_1.fq.gz<<<

Started analysis of SRR1823644_1_val_1.fq.gz
Approx 5% complete for SRR1823644_1_val_1.fq.gz
Approx 10% complete for SRR1823644_1_val_1.fq.gz
Approx 15% complete for SRR1823644_1_val_1.fq.gz
Approx 20% complete for SRR1823644_1_val_1.fq.gz
Approx 25% complete for SRR1823644_1_val_1.fq.gz
Approx 30% complete for SRR1823644_1_val_1.fq.gz
Approx 35% complete for SRR1823644_1_val_1.fq.gz
Approx 40% complete for SRR1823644_1_val_1.fq.gz
Approx 45% complete for SRR1823644_1_val_1.fq.gz
Approx 50% complete for SRR1823644_1_val_1.fq.gz
Approx 55% complete for SRR1823644_1_val_1.fq.gz
Approx 60% complete for SRR1823644_1_val_1.fq.gz
Approx 65% complete for SRR1823644_1_val_1.fq.gz
Approx 70% complete for SRR1823644_1_val_1.fq.gz
Approx 75% complete for SRR1823644_1_val_1.fq.gz
Approx 80% complete for SRR1823644_1_val_1.fq.gz
Approx 85% complete for SRR1823644_1_val_1.fq.gz
Approx 90% complete for SRR1823644_1_val_1.fq.gz
Approx 95% complete for SRR1823644_1_val_1.fq.gz
Analysis complete for SRR1823644_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SRR1823644_2_val_2.fq.gz<<<

Started analysis of SRR1823644_2_val_2.fq.gz
Approx 5% complete for SRR1823644_2_val_2.fq.gz
Approx 10% complete for SRR1823644_2_val_2.fq.gz
Approx 15% complete for SRR1823644_2_val_2.fq.gz
Approx 20% complete for SRR1823644_2_val_2.fq.gz
Approx 25% complete for SRR1823644_2_val_2.fq.gz
Approx 30% complete for SRR1823644_2_val_2.fq.gz
Approx 35% complete for SRR1823644_2_val_2.fq.gz
Approx 40% complete for SRR1823644_2_val_2.fq.gz
Approx 45% complete for SRR1823644_2_val_2.fq.gz
Approx 50% complete for SRR1823644_2_val_2.fq.gz
Approx 55% complete for SRR1823644_2_val_2.fq.gz
Approx 60% complete for SRR1823644_2_val_2.fq.gz
Approx 65% complete for SRR1823644_2_val_2.fq.gz
Approx 70% complete for SRR1823644_2_val_2.fq.gz
Approx 75% complete for SRR1823644_2_val_2.fq.gz
Approx 80% complete for SRR1823644_2_val_2.fq.gz
Approx 85% complete for SRR1823644_2_val_2.fq.gz
Approx 90% complete for SRR1823644_2_val_2.fq.gz
Approx 95% complete for SRR1823644_2_val_2.fq.gz
Analysis complete for SRR1823644_2_val_2.fq.gz
Deleting both intermediate output files SRR1823644_1_trimmed.fq.gz and SRR1823644_2_trimmed.fq.gz

====================================================================================================

###CF Trim galore (PE mode) successfully exited, took 32 minutes, 28 seconds..




--------------------------------------------------------------------------------
Module:			kallisto
Run File:		SRR1823644_1.fastq.gz_fastq_kallisto.run
Job ID:			cf_fastq_kallisto_1466004344_kallisto_883
Previous Job ID:	cf_fastq_kallisto_1466004344_trim_galore_522
Date & Time:		17:03, 15-06-2016
--------------------------------------------------------------------------------


Pseudoaligning against /home/rsh46/scratch/Genomes/Mus_musculus/GRCm38/Mus_musculus.GRCm38.cdna.all.idx

---------- Kallisto version information ----------
kallisto, version 0.43.0

------- End of Kallisto version information ------

###CFCMD kallisto quant -t 1 --pseudobam -i /home/rsh46/scratch/Genomes/Mus_musculus/GRCm38/Mus_musculus.GRCm38.cdna.all.idx -o SRR1823644_1_val_1.fq.gz_kallisto_output -b 100 SRR1823644_1_val_1.fq.gz SRR1823644_2_val_2.fq.gz | samtools view -Sb - > SRR1823644_1_val_1.fq.gz_kallisto.bam


[quant] fragment length distribution will be estimated from the data
[index] k-mer length: 31
[index] number of targets: 96,626
[index] number of k-mers: 87,312,671
[index] number of equivalence classes: 333,129
[quant] running in paired-end mode
[quant] will process pair 1: SRR1823644_1_val_1.fq.gz
                             SRR1823644_2_val_2.fq.gz
[quant] finding pseudoalignments for the reads ... done
[quant] processed 22,350,583 reads, 17,304,805 reads pseudoaligned
[quant] estimated average fragment length: 362.479
[   em] quantifying the abundances ... done
[   em] the Expectation-Maximization algorithm ran for 1,120 rounds
[bstrp] running EM for the bootstrap: 1[bstrp] running EM for the bootstrap: 2[bstrp] running EM for the bootstrap: 3[bstrp] running EM for the bootstrap: 4[bstrp] running EM for the bootstrap: 5[bstrp] running EM for the bootstrap: 6[bstrp] running EM for the bootstrap: 7[bstrp] running EM for the bootstrap: 8[bstrp] running EM for the bootstrap: 9[bstrp] running EM for the bootstrap: 10[bstrp] running EM for the bootstrap: 11[bstrp] running EM for the bootstrap: 12[bstrp] running EM for the bootstrap: 13[bstrp] running EM for the bootstrap: 14[bstrp] running EM for the bootstrap: 15[bstrp] running EM for the bootstrap: 16[bstrp] running EM for the bootstrap: 17[bstrp] running EM for the bootstrap: 18[bstrp] running EM for the bootstrap: 19[bstrp] running EM for the bootstrap: 20[bstrp] running EM for the bootstrap: 21[bstrp] running EM for the bootstrap: 22[bstrp] running EM for the bootstrap: 23[bstrp] running EM for the bootstrap: 24[bstrp] running EM for the bootstrap: 25[bstrp] running EM for the bootstrap: 26[bstrp] running EM for the bootstrap: 27[bstrp] running EM for the bootstrap: 28[bstrp] running EM for the bootstrap: 29[bstrp] running EM for the bootstrap: 30[bstrp] running EM for the bootstrap: 31[bstrp] running EM for the bootstrap: 32[bstrp] running EM for the bootstrap: 33[bstrp] running EM for the bootstrap: 34[bstrp] running EM for the bootstrap: 35[bstrp] running EM for the bootstrap: 36[bstrp] running EM for the bootstrap: 37[bstrp] running EM for the bootstrap: 38[bstrp] running EM for the bootstrap: 39[bstrp] running EM for the bootstrap: 40[bstrp] running EM for the bootstrap: 41[bstrp] running EM for the bootstrap: 42[bstrp] running EM for the bootstrap: 43[bstrp] running EM for the bootstrap: 44[bstrp] running EM for the bootstrap: 45[bstrp] running EM for the bootstrap: 46[bstrp] running EM for the bootstrap: 47[bstrp] running EM for the bootstrap: 48[bstrp] running EM for the bootstrap: 49[bstrp] running EM for the bootstrap: 50[bstrp] running EM for the bootstrap: 51[bstrp] running EM for the bootstrap: 52[bstrp] running EM for the bootstrap: 53[bstrp] running EM for the bootstrap: 54[bstrp] running EM for the bootstrap: 55[bstrp] running EM for the bootstrap: 56[bstrp] running EM for the bootstrap: 57[bstrp] running EM for the bootstrap: 58[bstrp] running EM for the bootstrap: 59[bstrp] running EM for the bootstrap: 60[bstrp] running EM for the bootstrap: 61[bstrp] running EM for the bootstrap: 62[bstrp] running EM for the bootstrap: 63[bstrp] running EM for the bootstrap: 64[bstrp] running EM for the bootstrap: 65[bstrp] running EM for the bootstrap: 66[bstrp] running EM for the bootstrap: 67[bstrp] running EM for the bootstrap: 68[bstrp] running EM for the bootstrap: 69[bstrp] running EM for the bootstrap: 70[bstrp] running EM for the bootstrap: 71[bstrp] running EM for the bootstrap: 72[bstrp] running EM for the bootstrap: 73[bstrp] running EM for the bootstrap: 74[bstrp] running EM for the bootstrap: 75[bstrp] running EM for the bootstrap: 76[bstrp] running EM for the bootstrap: 77[bstrp] running EM for the bootstrap: 78[bstrp] running EM for the bootstrap: 79[bstrp] running EM for the bootstrap: 80[bstrp] running EM for the bootstrap: 81[bstrp] running EM for the bootstrap: 82[bstrp] running EM for the bootstrap: 83[bstrp] running EM for the bootstrap: 84[bstrp] running EM for the bootstrap: 85[bstrp] running EM for the bootstrap: 86[bstrp] running EM for the bootstrap: 87[bstrp] running EM for the bootstrap: 88[bstrp] running EM for the bootstrap: 89[bstrp] running EM for the bootstrap: 90[bstrp] running EM for the bootstrap: 91[bstrp] running EM for the bootstrap: 92[bstrp] running EM for the bootstrap: 93[bstrp] running EM for the bootstrap: 94[bstrp] running EM for the bootstrap: 95[bstrp] running EM for the bootstrap: 96[bstrp] running EM for the bootstrap: 97[bstrp] running EM for the bootstrap: 98[bstrp] running EM for the bootstrap: 99[bstrp] running EM for the bootstrap: 100

###CF kallisto (PE mode) successfully exited, took 55 minutes, 16 seconds..



--------------------------------------------------------------------------------
Unrecognised output: (indicated with "-> <-")
--------------------------------------------------------------------------------
-> slurmstepd: Exceeded job memory limit at some point. <-

================================================================================





###CF Run finished at 17:59 15-06-2016


###CF Pipeline fastq_kallisto finished at 17:59 15-06-2016

Sending HTML e-mail with sendmail..
Sent a pipeline e-mail notification to rsh46@cam.ac.uk
